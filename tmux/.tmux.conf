#
# Shared configuration (Linux & OS X)
#

# Unbind-key ctrl + b as prefix
# use ` as prefix
# set `` to enter a single `
unbind-key C-b
set -g prefix `
bind-key ` send-prefix

# support true color
set -g default-terminal 'tmux-256color'

# propagate terminal emulator focus events
set -g focus-events on

# turn on mouse support
set -g mouse on

# turn off automatically setting window title to current running process
setw -g automatic-rename off
set -g allow-rename off

# set the terminal title to the current session name
set -g set-titles on
set -g set-titles-string '#S'

# set initial index to 1 instead of 0 because it's a pain in the ass
# to reach over for 0
set -g base-index 1
setw -g pane-base-index 1

# switch to a different session when killing the current session
set -g detach-on-destroy off

# set to a more useful limit
set -g history-limit 20000

# add binding to reload .tmux.conf
bind-key r source-file ~/.tmux.conf \; display 'Reloaded .tmux.conf'

# add shortcut to get to the last window
bind-key L last-window

# kill current session
bind-key X confirm-before -p 'Kill session #{session_name}? (y/n)' kill-session

# set VI keybindings
set -g status-keys vi
setw -g mode-keys vi

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind-key -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -U"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -D"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# Toggle scratch session in popup
bind-key -n M-s if-shell -F '#{==:#{session_name},scratch}' {
  detach-client
} {
  display-popup -E "tmux new-session -A -s scratch -c $HOME"
}

# Toggle notes session in popup
bind-key -n M-n if-shell -F '#{==:#{session_name},notes}' {
  detach-client
} {
  display-popup -E -h '80%' -w '60%' "tmux new-session -A -s notes -c $NOTES"
}

# remove delay in vim when switching from insert to normal mode
# as a side effect, piss me off a lot less
set -sg escape-time 0

# display tmux messages for 4 seconds
set -g display-time 4000

#
# status bar
#

# Config

# icons I like:    
left_status_icon_normal=''
left_status_icon_pending=''
border_left=''
border_right=''

left_status_normal_main_bg='white'
left_status_normal_main_fg='black,bold'
left_status_normal_icon_bg='cyan'
left_status_normal_icon_fg='black'

left_status_pending_main_bg='white'
left_status_pending_main_fg='black,bold'
left_status_pending_icon_bg='yellow'
left_status_pending_icon_fg='black'

window_tab_active_bg='white'
window_tab_active_fg='black,bold'
window_tab_inactive_bg='black'
window_tab_inactive_fg='white'

# not exposed with a nice name by color scheme
background_color='#282828'

# Status right

set -g status-justify right

set -g status-style bg=default,fg=white

set -g window-status-format '\
#[fg=#{window_tab_inactive_bg} bg=#{background_color}]#{border_left}#[none]\
#[fg=#{window_tab_inactive_fg} bg=#{window_tab_inactive_bg}] #W #[none]\
#[fg=#{window_tab_inactive_bg} bg=#{background_color}]#{border_right}#[none]\
'

set -g window-status-current-format '\
#[fg=#{window_tab_active_bg} bg=#{background_color}]#{border_left}#[none]\
#[fg=#{window_tab_active_fg} bg=#{window_tab_active_bg}] #W #[none]\
#[fg=#{window_tab_active_bg} bg=#{background_color}]#{border_right}#[none]\
'

set -g window-status-last-style bg=black,fg=white

set -g status-right ''
set -g status-right-length 40

# Status left

left_status_panel_normal="\
#[fg=#{left_status_normal_icon_bg} bg=#{background_color}]$border_left#[none]\
#[fg=#{left_status_normal_icon_fg} bg=#{left_status_normal_icon_bg}]$left_status_icon_normal #[none]\
#[fg=#{left_status_normal_main_bg} bg=#{left_status_normal_icon_bg}]$border_left#[none]\
#[fg=#{left_status_normal_main_fg} bg=#{left_status_normal_main_bg}] #S #[none]\
#[fg=#{left_status_normal_main_bg} bg=#{background_color}]$border_right#[none]\
"

left_status_panel_pending="\
#[fg=#{left_status_pending_icon_bg} bg=#{background_color}]$border_left#[none]\
#[fg=#{left_status_pending_icon_fg} bg=#{left_status_pending_icon_bg}]#[none]\
#[fg=#{left_status_pending_icon_fg} bg=#{left_status_pending_icon_bg}]$left_status_icon_pending #[none]\
#[fg=#{left_status_pending_main_bg} bg=#{left_status_pending_icon_bg}]$border_left#[none]\
#[fg=#{left_status_pending_main_fg} bg=#{left_status_pending_main_bg}] #S #[none]\
#[fg=#{left_status_pending_main_bg} bg=#{background_color}]$border_right#[none]\
"

set -g status-left-length 40
set -g status-left "#{?client_prefix,$left_status_panel_pending,$left_status_panel_normal}"

# guard against running this twice by checking if status is not equal to the
# default value 'on'
if -F '#{!=:#{status},2}' {
  # add padding between status by copying the current status to the bottom
  # status line, and then setting the top status line to a blank string
  set -g status 2
  set -Fg 'status-format[1]' '#{status-format[0]}'
  set -g 'status-format[0]' ''
}

#
# Window borders
#

set -g pane-border-style bg=default,fg=white

set -g pane-active-border-style bg=default,fg=white

set -g message-style bg=black,fg=cyan,bold

#
# Popup borders
#

set -g popup-border-style fg=white

set -g popup-border-lines rounded

#
# Load OS specific configuration
#

if-shell 'uname | grep -q Darwin' 'source ~/.tmux-osx.conf' 'source ~/.tmux-linux.conf'

#
# Plugins
#

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'sainnhe/tmux-fzf'

#
# tmux-resurrect
#

set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'

#
# tmux-continuum
#

set -g @continuum-restore 'on'

#
# tmux-fzf
#

TMUX_FZF_LAUNCH_KEY=z
TMUX_FZF_SESSION_FORMAT='#{session_windows} windows'
TMUX_FZF_ORDER='window|pane|keybinding|command'

# fuzzy find sessions
bind-key g run-shell -b '$TMUX_PLUGIN_MANAGER_PATH/tmux-fzf/scripts/session.sh switch'

# Initialize TMUX plugin manager
run '~/.tmux/plugins/tpm/tpm'

